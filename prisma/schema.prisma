generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                    String                     @unique
  hashed_password          String
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime                   @default(now()) @db.Timestamptz(6)
  email_verified           Boolean                    @default(false)
  email_verification_code  String?
  password_reset_code      String?
  password_at              DateTime                   @default(now()) @db.Timestamptz(6)
  display_name             String?
  avatar_file_key          String?
  contact_form_submissions contact_form_submissions[]
  teams_users              teams_users[]
}

model contact_form_submissions {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String?
  email      String
  message    String
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  users      users?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model invitations {
  team_id    String   @db.Uuid
  email      String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  teams      teams    @relation(fields: [team_id], references: [id], onDelete: Cascade)

  @@id([team_id, email])
}

model projects {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime             @default(now()) @db.Timestamptz(6)
  start_time         DateTime?            @db.Timestamptz(6)
  stop_time          DateTime?            @db.Timestamptz(6)
  objective          String?
  branding           String?
  is_draft           Boolean              @default(true)
  platform           String?
  project_type       String?
  facebook_audiences facebook_audiences[]
  facebook_creatives facebook_creatives[]
  landing_pages      landing_pages[]
  projects_themes    projects_themes[]
  teams_projects     teams_projects[]
}

model teams {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String
  created_at     DateTime         @default(now()) @db.Timestamptz(6)
  updated_at     DateTime         @default(now()) @db.Timestamptz(6)
  invitations    invitations[]
  teams_projects teams_projects[]
  teams_users    teams_users[]
}

model teams_projects {
  project_id String   @db.Uuid
  team_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade)
  teams      teams    @relation(fields: [team_id], references: [id], onDelete: Cascade)

  @@id([project_id, team_id])
}

model teams_users {
  team_id     String      @db.Uuid
  user_id     String      @db.Uuid
  created_at  DateTime    @default(now()) @db.Timestamptz(6)
  role        String      @default("member")
  teams_roles teams_roles @relation(fields: [role], references: [role], onDelete: NoAction, onUpdate: NoAction)
  teams       teams       @relation(fields: [team_id], references: [id], onDelete: Cascade)
  users       users       @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([team_id, user_id])
}

model teams_roles {
  role        String        @id
  description String
  teams_users teams_users[]
}

model facebook_audiences {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id          String   @db.Uuid
  name                String?
  min_age             Decimal? @db.Decimal
  max_age             Decimal? @db.Decimal
  genders             Int[]    @default([1, 2])
  device_platforms    String[] @default(["mobile", "desktop"])
  facebook_positions  String[] @default(["feed"])
  geo_locations       Json     @default("{\"countries\": [\"US\"]}")
  publisher_platforms String[] @default(["facebook"])
  interests           Json?
  created_at          DateTime @default(now()) @db.Timestamptz(6)
  updated_at          DateTime @default(now()) @db.Timestamptz(6)
  projects            projects @relation(fields: [project_id], references: [id], onDelete: Cascade)
}

model projects_themes {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id    String          @db.Uuid
  name          String
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  updated_at    DateTime        @default(now()) @db.Timestamptz(6)
  projects      projects        @relation(fields: [project_id], references: [id], onDelete: Cascade)
  themes_angles themes_angles[]
}

model themes_angles {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  theme_id        String          @db.Uuid
  name            String
  created_at      DateTime        @default(now()) @db.Timestamptz(6)
  updated_at      DateTime        @default(now()) @db.Timestamptz(6)
  projects_themes projects_themes @relation(fields: [theme_id], references: [id], onDelete: Cascade)
}

model facebook_creative_templates {
  id                     String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  enabled                Boolean              @default(true)
  name                   String
  description            String?
  json_schema            Json
  ui_schema              Json?
  creatomate_template_id String
  created_at             DateTime             @default(now()) @db.Timestamptz(6)
  updated_at             DateTime             @default(now()) @db.Timestamptz(6)
  facebook_creatives     facebook_creatives[]
}

model facebook_creatives {
  id                          String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                  String                      @db.Uuid
  template_id                 String                      @db.Uuid
  data                        Json?
  created_at                  DateTime                    @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime                    @default(now()) @db.Timestamptz(6)
  projects                    projects                    @relation(fields: [project_id], references: [id], onDelete: Cascade)
  facebook_creative_templates facebook_creative_templates @relation(fields: [template_id], references: [id])
}

model landing_page_templates {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  enabled       Boolean         @default(true)
  name          String
  description   String?
  json_schema   Json
  ui_schema     Json?
  component     String
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  updated_at    DateTime        @default(now()) @db.Timestamptz(6)
  landing_pages landing_pages[]
}

model landing_pages {
  id                     String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id             String                 @db.Uuid
  template_id            String                 @db.Uuid
  data                   Json
  created_at             DateTime               @default(now()) @db.Timestamptz(6)
  updated_at             DateTime               @default(now()) @db.Timestamptz(6)
  projects               projects               @relation(fields: [project_id], references: [id], onDelete: Cascade)
  landing_page_templates landing_page_templates @relation(fields: [template_id], references: [id])
}
